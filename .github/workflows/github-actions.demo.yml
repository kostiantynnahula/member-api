name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  prepare: 
    runs-on: ubuntu-latest
    outputs: 
      repo: ${{steps.repo.outputs.repo}}
      branch: ${{steps.branch.outputs.branch}}
    steps: 
      - name: extract repo name
        id: repo
        run: echo "repo=${{ github.repository }}" >> $GITHUB_OUTPUT
      - name: extract branch name 
        id: branch
        run: echo "branch=$(echo ${GITHUB_REF##*/})" >> $GITHUB_OUTPUT

  Explore-GitHub-Actions:
    needs: [prepare]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: artifactory url
        run: echo "${{ secrets.ARTIFACTORY_URL }}"
      - name: artifactory url
        run: echo "${{ secrets.ARTIFACTORY_USERNAME }}"
      - name: artifactory url
        run: echo "${{ secrets.ARTIFACTORY_PASSWORD }}"
      - name: install jfrog cli
        uses: jfrog/setup-jfrog-cli@v3
        env: 
          JF_URL: ${{ secrets.ARTIFACTORY_URL }}
          JF_USER: ${{ secrets.ARTIFACTORY_USERNAME }}
          JF_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          jf rt ping
      # - name: configure jfrog cli
      #   run: jfrog rt config --url=${{ secrets.ARTIFACTORY_URL }} --user=${{ secrets.ARTIFACTORY_USERNAME }} --password=${{ secrets.ARTIFACTORY_PASSWORD }}
      # - name: Retrieve node_modules' cache
      #   id: node-modules-cache
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       node_modules
      #       */*/node_modules
      #     key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      # - name: Install node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '16.x'
      # - name: install
      #   run: yarn
      # - name: check node node-version
      #   run: node -v

        
  Deploy: 
    needs: [prepare, Explore-GitHub-Actions]
    if: ${{needs.prepare.outputs.branch == 'github-actions'}}
    runs-on: ubuntu-latest
    steps: 
      - run: echo "test deploy"
